type FullAdder = module(a: b1, b: b1, cin: b1) -> (sum: b1, cout: b1) {
    let sum = a & b & cin;
    let cout = (a & b) | (a & cin) | (b & cin);
    yield .{ .sum = sum, .cout = cout };
}

//const Toplevel = module () -> () {
//    const .{ sum: sum, cout: cout } = FullAdder(1, 0, 1);
//};
